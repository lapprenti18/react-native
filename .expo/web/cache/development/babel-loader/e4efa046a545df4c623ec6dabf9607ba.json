{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/circleci/repo/src/v1/ReText.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated from \"react-native-reanimated\";\nvar AnimatedTextInput = Animated.createAnimatedComponent(TextInput);\n\nvar ReText = function ReText(props) {\n  var _style$props = _objectSpread({\n    style: {}\n  }, props),\n      text = _style$props.text,\n      style = _style$props.style;\n\n  return React.createElement(AnimatedTextInput, _extends({\n    underlineColorAndroid: \"transparent\",\n    editable: false\n  }, {\n    text: text,\n    style: style\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default ReText;","map":{"version":3,"sources":["ReText.tsx"],"names":["AnimatedTextInput","Animated","ReText","text","style"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;AAEA,OAAA,QAAA,MAAA,yBAAA;AAEA,IAAMA,iBAAiB,GAAGC,QAAQ,CAARA,uBAAAA,CAA1B,SAA0BA,CAA1B;;AAOA,IAAMC,MAAM,GAANA,SAAAA,MAAAA,CAAS,KAATA,EAA+B;AAAA,MAAA,YAAA,GAAA,aAAA,CAAA;AACTE,IAAAA,KAAK,EADI;AAAA,GAAA,EAAA,KAAA,CAAA;AAAA,MAC3BD,IAD2B,GAAA,YAAA,CAAA,IAAA;AAAA,MACrBC,KADqB,GAAA,YAAA,CAAA,KAAA;;AAEnC,SACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,QAAA,CAAA;AACE,IAAA,qBAAqB,EADvB,aAAA;AAEE,IAAA,QAAQ,EAFV;AAAA,GAAA,EAGM;AAAED,IAAAA,IAAI,EAAN,IAAA;AAAQC,IAAAA,KAAK,EAHnB;AAGM,GAHN,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EADF;AACE;AAAA,GAAA,CAAA,CADF;AAFF,CAAA;;AAWA,eAAA,MAAA","sourcesContent":["import * as React from \"react\";\nimport { TextInput, TextStyle } from \"react-native\";\nimport Animated from \"react-native-reanimated\";\n\nconst AnimatedTextInput = Animated.createAnimatedComponent(TextInput);\n\ninterface TextProps {\n  text: Animated.Node<string>;\n  style?: TextStyle;\n}\n\nconst ReText = (props: TextProps) => {\n  const { text, style } = { style: {}, ...props };\n  return (\n    <AnimatedTextInput\n      underlineColorAndroid=\"transparent\"\n      editable={false}\n      {...{ text, style }}\n    />\n  );\n};\n\nexport default ReText;\n"]},"metadata":{},"sourceType":"module"}