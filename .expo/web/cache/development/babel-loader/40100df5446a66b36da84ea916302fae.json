{"ast":null,"code":"export var canvas2Cartesian = function canvas2Cartesian(v, center) {\n  \"worklet\";\n\n  return {\n    x: v.x - center.x,\n    y: -1 * (v.y - center.y)\n  };\n};\nexport var cartesian2Canvas = function cartesian2Canvas(v, center) {\n  \"worklet\";\n\n  return {\n    x: v.x + center.x,\n    y: -1 * v.y + center.y\n  };\n};\nexport var cartesian2Polar = function cartesian2Polar(v) {\n  \"worklet\";\n\n  return {\n    theta: Math.atan2(v.y, v.x),\n    radius: Math.sqrt(Math.pow(v.x, 2) + Math.pow(v.y, 2))\n  };\n};\nexport var polar2Cartesian = function polar2Cartesian(p) {\n  \"worklet\";\n\n  return {\n    x: p.radius * Math.cos(p.theta),\n    y: p.radius * Math.sin(p.theta)\n  };\n};\nexport var polar2Canvas = function polar2Canvas(p, center) {\n  \"worklet\";\n\n  return cartesian2Canvas(polar2Cartesian(p), center);\n};\nexport var canvas2Polar = function canvas2Polar(v, center) {\n  \"worklet\";\n\n  return cartesian2Polar(canvas2Cartesian(v, center));\n};","map":{"version":3,"sources":["Coordinates.ts"],"names":["canvas2Cartesian","x","v","center","y","cartesian2Canvas","cartesian2Polar","theta","Math","radius","polar2Cartesian","p","polar2Canvas","canvas2Polar"],"mappings":"AAOA,OAAO,IAAMA,gBAAgB,GAAhBA,SAAAA,gBAAAA,CAAmB,CAAnBA,EAAmB,MAAnBA,EAAkD;AAC7D;;AACA,SAAO;AACLC,IAAAA,CAAC,EAAEC,CAAC,CAADA,CAAAA,GAAMC,MAAM,CADV,CAAA;AAELC,IAAAA,CAAC,EAAE,CAAA,CAAA,IAAMF,CAAC,CAADA,CAAAA,GAAMC,MAAM,CAFvB,CAEK;AAFE,GAAP;AAFK,CAAA;AAQP,OAAO,IAAME,gBAAgB,GAAhBA,SAAAA,gBAAAA,CAAmB,CAAnBA,EAAmB,MAAnBA,EAAkD;AAC7D;;AACA,SAAO;AACLJ,IAAAA,CAAC,EAAEC,CAAC,CAADA,CAAAA,GAAMC,MAAM,CADV,CAAA;AAELC,IAAAA,CAAC,EAAE,CAAA,CAAA,GAAKF,CAAC,CAAN,CAAA,GAAWC,MAAM,CAFtB;AAAO,GAAP;AAFK,CAAA;AAQP,OAAO,IAAMG,eAAe,GAAfA,SAAAA,eAAAA,CAAkB,CAAlBA,EAAiC;AAC5C;;AACA,SAAO;AACLC,IAAAA,KAAK,EAAEC,IAAI,CAAJA,KAAAA,CAAWN,CAAC,CAAZM,CAAAA,EAAgBN,CAAC,CADnB,CACEM,CADF;AAELC,IAAAA,MAAM,EAAED,IAAI,CAAJA,IAAAA,CAAU,IAAA,CAAA,GAAA,CAAA,CAAC,CAAD,CAAA,EAAA,CAAA,IAAA,IAAA,CAAA,GAAA,CAAWN,CAAC,CAAZ,CAAA,EAFpB,CAEoB,CAAVM;AAFH,GAAP;AAFK,CAAA;AAQP,OAAO,IAAME,eAAe,GAAfA,SAAAA,eAAAA,CAAkB,CAAlBA,EAAqC;AAChD;;AACA,SAAO;AACLT,IAAAA,CAAC,EAAEU,CAAC,CAADA,MAAAA,GAAWH,IAAI,CAAJA,GAAAA,CAASG,CAAC,CADnB,KACSH,CADT;AAELJ,IAAAA,CAAC,EAAEO,CAAC,CAADA,MAAAA,GAAWH,IAAI,CAAJA,GAAAA,CAASG,CAAC,CAF1B,KAEgBH;AAFT,GAAP;AAFK,CAAA;AAQP,OAAO,IAAMI,YAAY,GAAZA,SAAAA,YAAAA,CAAe,CAAfA,EAAe,MAAfA,EAAkD;AAC7D;;AACA,SAAOP,gBAAgB,CAACK,eAAe,CAAhB,CAAgB,CAAhB,EAAvB,MAAuB,CAAvB;AAFK,CAAA;AAKP,OAAO,IAAMG,YAAY,GAAZA,SAAAA,YAAAA,CAAe,CAAfA,EAAe,MAAfA,EAA8C;AACzD;;AACA,SAAOP,eAAe,CAACN,gBAAgB,CAAA,CAAA,EAAvC,MAAuC,CAAjB,CAAtB;AAFK,CAAA","sourcesContent":["import { Vector } from \"./Vectors\";\n\nexport interface PolarPoint {\n  theta: number;\n  radius: number;\n}\n\nexport const canvas2Cartesian = (v: Vector, center: Vector) => {\n  \"worklet\";\n  return {\n    x: v.x - center.x,\n    y: -1 * (v.y - center.y),\n  };\n};\n\nexport const cartesian2Canvas = (v: Vector, center: Vector) => {\n  \"worklet\";\n  return {\n    x: v.x + center.x,\n    y: -1 * v.y + center.y,\n  };\n};\n\nexport const cartesian2Polar = (v: Vector) => {\n  \"worklet\";\n  return {\n    theta: Math.atan2(v.y, v.x),\n    radius: Math.sqrt(v.x ** 2 + v.y ** 2),\n  };\n};\n\nexport const polar2Cartesian = (p: PolarPoint) => {\n  \"worklet\";\n  return {\n    x: p.radius * Math.cos(p.theta),\n    y: p.radius * Math.sin(p.theta),\n  };\n};\n\nexport const polar2Canvas = (p: PolarPoint, center: Vector) => {\n  \"worklet\";\n  return cartesian2Canvas(polar2Cartesian(p), center);\n};\n\nexport const canvas2Polar = (v: Vector, center: Vector) => {\n  \"worklet\";\n  return cartesian2Polar(canvas2Cartesian(v, center));\n};\n"]},"metadata":{},"sourceType":"module"}