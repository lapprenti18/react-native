{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/home/lapprenti18/sandbox/retry/react-native/src/components/Button.tsx\";\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { RectButton } from \"react-native-gesture-handler\";\nimport { useTheme } from \"@shopify/restyle\";\nimport { Text } from \"./Theme\";\nvar styles = StyleSheet.create({\n  container: {\n    height: 50,\n    width: 245,\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n\nvar Button = function Button(_ref) {\n  var label = _ref.label,\n      variant = _ref.variant,\n      onPress = _ref.onPress;\n  var theme = useTheme();\n  var backgroundColor = variant === \"primary\" ? theme.colors.primary : theme.colors.grey;\n  var color = variant === \"primary\" ? theme.colors.white : theme.colors.text;\n  return React.createElement(RectButton, _extends({\n    style: [styles.container, {\n      backgroundColor: backgroundColor\n    }]\n  }, {\n    onPress: onPress\n  }, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    variant: \"button\",\n    style: {\n      color: color\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, label));\n};\n\nButton.defaultProps = {\n  variant: \"default\"\n};\nexport default Button;","map":{"version":3,"sources":["/home/lapprenti18/sandbox/retry/react-native/src/components/Button.tsx"],"names":["React","RectButton","useTheme","Text","styles","StyleSheet","create","container","height","width","borderRadius","justifyContent","alignItems","Button","label","variant","onPress","theme","backgroundColor","colors","primary","grey","color","white","text","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAAgBC,IAAhB;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,KAAK,EAAE,GAFE;AAGTC,IAAAA,YAAY,EAAE,EAHL;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,UAAU,EAAE;AALH;AADoB,CAAlB,CAAf;;AAgBA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA8C;AAAA,MAA3CC,KAA2C,QAA3CA,KAA2C;AAAA,MAApCC,OAAoC,QAApCA,OAAoC;AAAA,MAA3BC,OAA2B,QAA3BA,OAA2B;AAC3D,MAAMC,KAAK,GAAGf,QAAQ,EAAtB;AACA,MAAMgB,eAAe,GACnBH,OAAO,KAAK,SAAZ,GAAwBE,KAAK,CAACE,MAAN,CAAaC,OAArC,GAA+CH,KAAK,CAACE,MAAN,CAAaE,IAD9D;AAEA,MAAMC,KAAK,GAAGP,OAAO,KAAK,SAAZ,GAAwBE,KAAK,CAACE,MAAN,CAAaI,KAArC,GAA6CN,KAAK,CAACE,MAAN,CAAaK,IAAxE;AACA,SACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE,CAACpB,MAAM,CAACG,SAAR,EAAmB;AAAEW,MAAAA,eAAe,EAAfA;AAAF,KAAnB;AADT,KAEM;AAAEF,IAAAA,OAAO,EAAPA;AAAF,GAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAALA;AAAF,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KADH,CAJF,CADF;AAUD,CAfD;;AAiBAD,MAAM,CAACY,YAAP,GAAsB;AACpBV,EAAAA,OAAO,EAAE;AADW,CAAtB;AAIA,eAAeF,MAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { RectButton } from \"react-native-gesture-handler\";\nimport { useTheme } from \"@shopify/restyle\";\n\nimport { Theme, Text } from \"./Theme\";\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 50,\n    width: 245,\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\ninterface ButtonProps {\n  label: string;\n  variant: \"default\" | \"primary\";\n  onPress: () => void;\n}\n\nconst Button = ({ label, variant, onPress }: ButtonProps) => {\n  const theme = useTheme<Theme>();\n  const backgroundColor =\n    variant === \"primary\" ? theme.colors.primary : theme.colors.grey;\n  const color = variant === \"primary\" ? theme.colors.white : theme.colors.text;\n  return (\n    <RectButton\n      style={[styles.container, { backgroundColor }]}\n      {...{ onPress }}\n    >\n      <Text variant=\"button\" style={{ color }}>\n        {label}\n      </Text>\n    </RectButton>\n  );\n};\n\nButton.defaultProps = {\n  variant: \"default\",\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}