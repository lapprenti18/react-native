{"ast":null,"code":"export var snapPoint = function snapPoint(value, velocity, points) {\n  \"worklet\";\n\n  var point = value + 0.2 * velocity;\n  var deltas = points.map(function (p) {\n    return Math.abs(point - p);\n  });\n  var minDelta = Math.min.apply(null, deltas);\n  return points.filter(function (p) {\n    return Math.abs(point - p) === minDelta;\n  })[0];\n};","map":{"version":3,"sources":["Physics.ts"],"names":["snapPoint","point","value","deltas","points","Math","minDelta"],"mappings":"AAGA,OAAO,IAAMA,SAAS,GAATA,SAAAA,SAAAA,CAAY,KAAZA,EAAY,QAAZA,EAAY,MAAZA,EAIA;AACX;;AACA,MAAMC,KAAK,GAAGC,KAAK,GAAG,MAAtB,QAAA;AACA,MAAMC,MAAM,GAAGC,MAAM,CAANA,GAAAA,CAAW,UAAA,CAAA,EAAA;AAAA,WAAOC,IAAI,CAAJA,GAAAA,CAASJ,KAAK,GAArB,CAAOI,CAAP;AAA1B,GAAeD,CAAf;AACA,MAAME,QAAQ,GAAGD,IAAI,CAAJA,GAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAjB,MAAiBA,CAAjB;AACA,SAAOD,MAAM,CAANA,MAAAA,CAAc,UAAA,CAAA,EAAA;AAAA,WAAOC,IAAI,CAAJA,GAAAA,CAASJ,KAAK,GAAdI,CAAAA,MAAP,QAAA;AAAdD,GAAAA,EAAP,CAAOA,CAAP;AATK,CAAA","sourcesContent":["/**\n * @summary Select a point where the animation should snap to given the value of the gesture and it's velocity.\n */\nexport const snapPoint = (\n  value: number,\n  velocity: number,\n  points: ReadonlyArray<number>\n): number => {\n  \"worklet\";\n  const point = value + 0.2 * velocity;\n  const deltas = points.map((p) => Math.abs(point - p));\n  const minDelta = Math.min.apply(null, deltas);\n  return points.filter((p) => Math.abs(point - p) === minDelta)[0];\n};\n"]},"metadata":{},"sourceType":"module"}